pipeline{
    agent {
        docker{
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon

        }
        
    }
 stages {
    stage ('CheckOut') {
        steps {
            sh 'echo Git checkout'
           // git branch: 'main', url: 'https://github.com/anujatsamuel/Complete-CICD-Java-App.git'
        }
    }
    stage ('Build and Test') {
        steps {
            sh 'ls -ltr'
            // build the project and create a JAR file
            sh 'cd Java-App && mvn clean package'
        }

    }
    stage ('Static Code Analysis') {
        environment {
            SONAR_URL='http://54.237.41.239:9000'
        }
        steps {
            withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh 'cd Java-App && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
            }

        }

    }
    stage ('Build and Push Docker Image') {
        environment {
            DOCKER_IMAGE = "anujatsamuel/complete-cicd:${BUILD_NUMBER}"
         // DOCKERFILE_LOCATION = "Java-App/Dockerfile"
            REGISTRY_CREDENTIALS = credentials('docker-cred')
        }
        steps {
            script {
                sh 'cd Java-App && docker build -t ${DOCKER_IMAGE} .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
            }
        }

    }
    stage ('Update Deployment file') {
        environment {
            GIT_REPO_NAME = "Complete-CICD-Java-App"
            GIT_USER_NAME = "anujatsamuel"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "anujatsamuel@gmail.com"
                    git config user.name "Anuja"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" Java-App-manifests/deployment.yml
                    git add Java-App-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
    }
 }
 }
}
